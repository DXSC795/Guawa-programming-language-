Here are 10 Ternyx programs

_1. Hello World_
```
ternyx
vokar("Hello, World!")
```

_2. Basic Arithmetic_
```
ternyx
kal x = 5
nexa y = 3.14
vokar(x + y)
```

_3. Conditional Statement_
```
ternyx
kal x = 5
if x > 10 {
  vokar("x is greater than 10")
} else {
  vokar("x is less than or equal to 10")
}
```

_4. Loop_
```
ternyx
kal i = 0
surge i < 5 {
  vokar(i)
  i += 1
}
```

_5. Function_
```
ternyx
dox greet(name: vix) {
  vokar("Hello, " + name + "!")
}
greet("Ternyx")
```

_6. Macro_
```
ternyx
macro double(x) {
  x * 2
}
vokar(double(5))
```

_7. Concurrency_
```
ternyx
async dox asyncExample() {
  await vokar("Async example")
}
asyncExample()
```

_8. Data Structures_
```
ternyx
sek numbers = [1, 2, 3]
kor coordinates = (1, 2)
mapa person = {name: "Ternyx", age: 25}
vokar(numbers)
vokar(coordinates)
vokar(person)
```

_9. Error Handling_
```
ternyx
try {
  kal x = 5 / 0
} catch (error) {
  vokar("Error: " + error)
}
```

_10. Module Import_
```
ternyx
khetch math
vokar(math.pi)
```

These programs demonstrate the updated syntax for:

- Variables and data types
- Control flow (if, else, surge)
- Functions (dox)
- Macros
- Concurrency (async, await)
- Data structures (sek, kor, mapa)
- Error handling (try, catch)
- Module imports (khetch)
